//------------------------------------------------
//--- 010 Editor v7.0.2 Binary Template
//
//      File: NIF.bt
//   Authors: jonwd7
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: *.nif,*.bto,*.btr
//  ID Bytes: 47 61 6D 65 62 72 79 6F 20 46 69 6C 65 20 46 6F 72 6D 61 74 2C 20 56 65 72 73 69 6F 6E 20 32 30 2E 32 2E 30 2E 37 0A 07 00 02 14 01 [+1] 00 00 00
//   History: 
//------------------------------------------------


// DATATYPES

#include "Enums.bt"
#include "BasicTypes.bt"
#include "Anim.bt"
#include "ExtraData.bt"
#include "SkinTypes.bt"
#include "bhk.bt"

// Undecoded Block
typedef struct (int i) {
    local int index <hidden=true> = i;
    byte data[header.blocksize[i]] <open=suppress>;
} Block <name="~~Undecoded~~", comment=BlockComment, fgcolor=0x0055FF, bgcolor=0xDDFFFF>;

string BlockComment( Block& b )
{
    string s;
    SPrintf(s, "%s", file.header.btype[file.header.btypeindex[b.index].index].str);
    return s;
}

// DECODED BLOCKS

// NiAVObject 
typedef struct {
    STRING name;
    uint numExtraData;
    if ( numExtraData > 0)
        Ref extraData[numExtraData] <optimize=false>;
    Ref controller; // NiTimeController
    NiAVObjectFlags flags;
    Vec3 translation;
    Matrix33 rotation;
    float scale;
    if ( file.header.userversion < 12 ) {
        uint numProperties;
        if ( numProperties > 0 )
            Ref properties[numProperties] <optimize=false>;
    }
    Ref NiCollisionObject;
} NiAVObject <name="NiAVObject", open=true>;

// NiDynamicEffect 
typedef struct {
    NiAVObject base;
    if ( stream < 130 ) {
        bool switchState;
        uint numAffectedNodes;
        if ( numAffectedNodes > 0 )
            Ref affectedNodes;
    }
} NiDynamicEffect <name="NiDynamicEffect", open=true>;

// NiLight
typedef struct {
    NiDynamicEffect base;
    float dimmer;
    Color3 ambient;
    Color3 diffuse;
    Color3 specular;
} NiLight <name="NiLight", open=true>;

// NiPointLight
typedef struct {
    NiLight light;
    float constantAtten;
    float linearAtten;
    float quadraticAtten;
} NiPointLight <name="NiPointLight">;

#include "Geometry.bt"
#include "Particles.bt"
#include "Shader.bt"

// NiCamera
typedef struct {
    NiAVObject base;
    ushort obsoleteFlags;
    float frustumLeft;
    float frustumRight;
    float frustumTop;
    float frustumBottom;
    float frustumNear;
    float frustumFar;
    bool useOrtho;
    float viewportLeft;
    float viewportRight;
    float viewportTop;
    float viewportBottom;
    float lodAdjust;
    Ref scene;
    Ref screenPolygons;
    Ref screenTextures;
} NiCamera <name="NiCamera">;

// NiNode/BSFadeNode
typedef struct { 
    NiAVObject base;

    uint numChildren;
    if ( numChildren > 0 ) {
        Ref children[numChildren];
    }

    if ( file.header.stream < 130 ) {
        uint numEffects;
        if ( numEffects > 0 ) 
            Ref effect[numEffects]; // NiDynamicEffect
    }
} NiNode <name="NiNode">; // END

typedef NiNode BSFadeNode <name="BSFadeNode">;
typedef NiNode BSLeafAnimNode <name="BSLeafAnimNode">;

// BSTreeNode
typedef struct {
    NiNode node <open=true>;
    uint numBones1;
    if ( numBones1 > 0 )
        Ref bones1[numBones1];
    uint numBones2;
    if ( numBones2 > 0 )
        Ref bones2[numBones2];
} BSTreeNode <name="BSTreeNode">;

// NiSwitchNode
typedef struct {
    NiNode node <open=true>;
    ushort flags;
    uint startIndex; // Unsure
} NiSwitchNode <name="NiSwitchNode">;

// NiBillboardNode
typedef struct {
    NiNode node <open=true>;
    BillboardMode mode;
} NiBBNode <name="NiBillboardNode">;

// BSOrderedNode
typedef struct {
    NiNode node <open=true>;
    Vec4 alphaSortBound;
    bool isStaticBound;
} BSOrderedNode <name="BSOrderedNode">;

// BSMultiBoundNode
typedef struct {
    NiNode node <open=true>;
    Ref multiBound;
    if ( stream >= 83 )
        uint cullingMode;
} BSMultiBoundNode <name="BSMultiBoundNode">;

// BSValueNode
typedef struct {
    NiNode node <open=true>;
    uint value;
    byte unk;
} BSValueNode <name="BSValueNode">;

// BSBlastNode
typedef struct {
    NiNode node <open=true>;
    byte unk1;
    ushort unk2;
} BSBlastNode <name="BSBlastNode">;

typedef BSBlastNode BSDamageStage <name="BSDamageStage">;


// BSXFlags
typedef struct { 
    STRING name;
    uint integerData;
} BSXFlags <name="BSXFlags">;

struct FILE {
    struct HEADER {
        char HeaderString[39] <open=suppress>;
        byte version[4] <open=suppress>;
        byte endian;
        int userversion;
        int numblocks;
        int stream;

        ubyte creatorlength <hidden=true>;
        char creator[creatorlength] <open=suppress>;

        ubyte export1length <hidden=true>;
        char export1[export1length] <open=suppress>;

        ubyte export2length <hidden=true>;
        char export2[export2length] <open=suppress>;

        if ( stream == 130 ) {
            ubyte export3length <hidden=true>;
            char export3[export3length] <open=suppress>;
        }

        ushort numblocktypes;

        SSTRING btype[numblocktypes] <optimize=false, open=suppress>;

        BLOCKTYPEINDEX btypeindex[numblocks] <optimize=false, open=suppress>;

        uint blocksize[numblocks] <open=suppress>;

        uint numstrings;
        uint maxstringlength;
        
        SSTRING strs[numstrings] <optimize=false, open=suppress>;

        uint unknown;
    } header <bgcolor=cLtGray>;

    local int stream = header.stream;

    Assert( stream == 34 || stream ==  83 || stream == 100 || stream == 130, 
            "This NIF's stream version is not supported." );

    struct BLOCKS {
        local int i <hidden=true>;
        for ( i = 0 ; i < header.numblocks; i++ )
        {
            switch( header.btype[header.btypeindex[i].index].str )
            {
                case "NiNode":
                    NiNode data;
                    break;
                case "BSFadeNode":
                    BSFadeNode data;
                    break;
                case "NiTriShape":
                    NiTriShape data;
                    break;
                case "BSTriShape":
                    BSTriShape data;
                    break;
                case "BSSubIndexTriShape":
                    BSSubIndexTriShape data;
                    break;
                case "NiTriShapeData":
                    NiTriShapeData data;
                    break;
                case "BSLODTriShape":
                    BSLODTriShape data;
                    break;
                case "BSMeshLODTriShape":
                    BSMeshLODTriShape data;
                    break;
                case "BSDynamicTriShape":
                    BSDynamicTriShape data;
                    break;
                case "NiParticleSystem":
                    NiParticleSys data;
                    break;
                case "NiPSysData":
                    NiPSysData data;
                    break;
                case "BSLightingShaderProperty":
                    BSLightingShaderProperty data;
                    break;
                case "BSEffectShaderProperty":
                    BSEffectShaderProperty data;
                    break;
                case "BSShaderTextureSet":
                    BSShaderTextureSet data;
                    break;
                case "NiAlphaProperty":
                    NiAlphaProperty data;
                    break;
                case "BSWaterShaderProperty":
                    BSWaterShaderProperty data;
                    break;
                case "NiSkinInstance":
                    NiSkinInstance data;
                    break;
                case "NiSkinData":
                    NiSkinData data;
                    break;
                case "NiSkinPartition":
                    NiSkinPartition data;
                    break;
                case "BSDismemberSkinInstance":
                    BSDSkinInstance data;
                    break;
                case "BSSkin::Instance":
                    BSSkinInstance data;
                    break;
                case "BSSkin::BoneData":
                    BSSkinBoneData data;
                    break;
                case "BSLeafAnimNode":
                    BSLeafAnimNode data;
                    break;
                case "BSTreeNode":
                    BSTreeNode data;
                    break;
                case "NiSwitchNode":
                    NiSwitchNode data;
                    break;
                case "NiBillboardNode":
                    NiBBNode data;
                    break;
                case "BSOrderedNode":
                    BSOrderedNode data;
                    break;
                case "BSMultiBoundNode":
                    BSMultiBoundNode data;
                    break;
                case "BSValueNode":
                    BSValueNode data;
                    break;
                case "NiDefaultAVObjectPalette":
                    NiAVObjPalette data;
                    break;
                case "NiControllerManager":
                    NiControllerMgr data;
                    break;
                case "NiControllerSequence":
                    NiCtlrSeq data;
                    break;
                case "NiTransformController":
                    NiTransCtlr data;
                    break;
                case "NiMultiTargetTransformController":
                    NiMultiTransCtlr data;
                    break;
                case "NiVisController":
                    NiVisCtlr data;
                    break;
                case "NiFloatExtraDataController":
                    NiFloatEDCtlr data;
                    break;
                case "NiPSysModifierActiveCtlr":
                    NiPSysActiveCtlr data;
                    break;
                case "NiPSysEmitterCtlr":
                    NiPSysEmitterCtlr data;
                    break;
                case "NiPSysUpdateCtlr":
                    NiPSysUpdateCtlr data;
                    break;
                case "NiPSysGravityStrengthCtlr":
                    NiPSysGravStrCtlr data;
                    break;
                case "NiPSysEmitterLifeSpanCtlr":
                    NiPSEmitLifeSpanCtlr data;
                    break;
                case "NiPSysEmitterSpeedCtlr":
                    NiPSEmitSpeedCtlr data;
                    break;
                case "NiPSysEmitterInitialRadiusCtlr":
                    NiPSEmitIRadiusCtlr data;
                    break;
                case "BSStripParticleSystem":
                    BSStripParticleSys data;
                    break;
                case "BSStripPSysData":
                    BSStripPSysData data;
                    break;
                case "BSLightingShaderPropertyFloatController":
                    BSLSPFloatCtlr data;
                    break;
                case "BSLightingShaderPropertyColorController":
                    BSLSPColorCtlr data;
                    break;
                case "BSEffectShaderPropertyFloatController":
                    BSESPFloatCtlr data;
                    break;
                case "BSEffectShaderPropertyColorController":
                    BSESPColorCtlr data;
                    break;
                case "BSNiAlphaPropertyTestRefController":
                    BSNiAlphaCtlr data;
                    break;
                case "NiLightColorController":
                    NiLightColorCtlr data;
                    break;
                case "NiLightRadiusController":
                    NiLightRadiusCtlr data;
                    break;
                case "NiLightDimmerController":
                    NiLightDimmerCtlr data;
                    break;
                case "BSLagBoneController":
                    BSLagBoneCtlr data;
                    break;
                case "BSProceduralLightningController":
                    BSPLightningCtlr data;
                    break;
                case "NiTransformInterpolator":
                    NiTransformInterp data;
                    break;
                case "NiPoint3Interpolator":
                    NiPoint3Interp data;
                    break;
                case "NiBlendPoint3Interpolator":
                    NiBlendPoint3 data;
                    break;
                case "NiFloatInterpolator":
                    NiFloatInterp data;
                    break;
                case "NiBlendFloatInterpolator":
                    NiBlendFloat data;
                    break;
                case "NiBoolInterpolator":
                    NiBoolInterp data;
                    break;
                case "NiBlendBoolInterpolator":
                    NiBlendBool data;
                    break;
                case "NiBoolTimelineInterpolator":
                    NiBoolTimeInterp data;
                    break;
                case "NiLookAtInterpolator":
                    NiLookAtInterp data;
                    break;
                case "NiFloatData":
                    NiFloatData data;
                    break;
                case "NiBoolData":
                    NiBoolData data;
                    break;
                case "NiKeyFrameData":
                    NiKFData data;
                    break;
                case "NiTransformData":
                    NiTransformData data;
                    break;
                case "NiPosData":
                    NiPosData data;
                    break;
                case "BSXFlags":
                    BSXFlags data;
                    break;
                case "bhkRigidBody":
                    bhkRigidBody data;
                    break;
                case "bhkRigidBodyT":
                    bhkRigidBodyT data;
                    break;
                case "bhkCollisionObject":
                    bhkCollisionObj data;
                    break;
                case "bhkSPCollisionObject":
                    bhkSPCollObj data;
                    break;
                case "bhkNPCollisionObject":
                    bhkNPCollObj data;
                    break;
                case "bhkMoppBvTreeShape":
                    bhkMoppBVShape data;
                    break;
                case "bhkCompressedMeshShape":
                    bhkCMS data;
                    break;
                case "bhkCompressedMeshShapeData":
                    bhkCMSD data;
                    break;
                case "bhkSphereShape":
                    bhkSphereShape data;
                    break;
                case "bhkBoxShape":
                    bhkBoxShape data;
                    break;
                case "bhkCapsuleShape":
                    bhkCapsuleShape data;
                    break;
                case "bhkConvexVerticesShape":
                    bhkCVS data;
                    break;
                case "bhkTransformShape":
                    bhkTS data;
                    break;
                case "bhkConvexTransformShape":
                    bhkCTS data;
                    break;
                case "bhkListShape":
                    bhkListShape data;
                    break;
                case "bhkSimpleShapePhantom":
                    bhkSSPhantom data;
                    break;
                case "bhkPhysicsSystem":
                    bhkPhysSystem data;
                    break;
                case "bhkRagdollSystem":
                    bhkRagSystem data;
                    break;
                case "BSMultiBound":
                    BSMultiBound data;
                    break;
                case "BSMultiBoundOBB":
                    BSMultiBoundOBB data;
                    break;
                case "NiExtraData":
                    NiExtraData data;
                    break;
                case "NiBooleanExtraData":
                    NiBoolED data;
                    break;
                case "NiFloatExtraData":
                    NiFloatED data;
                    break;
                case "NiIntegerExtraData":
                    NiIntegerED data;
                    break;
                case "NiStringExtraData":
                    NiStringED data;
                    break;
                case "NiStringsExtraData":
                    NiStringsED data;
                    break;
                case "NiTextKeyExtraData":
                    NiTextKeyED data;
                    break;
                case "BSBoneLODExtraData":
                    BSBoneLODED data;
                    break;
                case "BSConnectPoint::Parents":
                    BSConnectPtParents data;
                    break;
                case "BSConnectPoint::Children":
                    BSConnectPtChildren data;
                    break;
                case "BSEyeCenterExtraData":
                    BSEyeCenterED data;
                    break;
                case "BSPositionData":
                    BSPositionData data;
                    break;
                case "BSInvMarker":
                    BSInvMarker data;
                    break;
                case "BSFurnitureMarkerNode":
                    BSFurnMarker data;
                    break;
                case "BSBehaviorGraphExtraData":
                    BSBGED data;
                    break;
                case "BSBlastNode":
                    BSBlastNode data;
                    break;
                case "BSDamageStage":
                    BSDamageStage data;
                    break;
                case "NiPointLight":
                    NiPointLight data;
                    break;
                case "NiCamera":
                    NiCamera data;
                    break;
                case "BSFrustumFOVController":
                    BSFrustumCtlr data;
                    break;
                case "NiPSysAgeDeathModifier":
                    NiPSAgeDeathMod data;
                    break;
                case "NiPSysSpawnModifier":
                    NiPSSpawnMod data;
                    break;
                case "BSPSysSimpleColorModifier":
                    BSPSSimpleColorMod data;
                    break;
                case "NiPSysRotationModifier":
                    NiPSRotationMod data;
                    break;
                case "BSPSysScaleModifier":
                    BSPSScaleMod data;
                    break;
                case "BSPSysLODModifier":
                    BSPSLODMod data;
                    break;
                case "NiPSysGravityModifier":
                    NiPSGravityMod data;
                    break;
                case "NiPSysDragModifier":
                    NiPSDragMod data;
                    break;
                case "NiPSysPositionModifier":
                    NiPSPositionMod data;
                    break;
                case "NiPSysBoundUpdateModifier":
                    NiPSBoundUpdateMod data;
                    break;
                case "BSPSysSubTexModifier":
                    BSPSysSubTexMod data;
                    break;
                case "NiPSysBombModifier":
                    NiPSysBombMod data;
                    break;
                case "BSWindModifier":
                    BSWindModifier data;
                    break;
                case "BSPSysInheritVelocityModifier":
                    BSPSInheritVelMod data;
                    break;
                case "BSPSysHavokUpdateModifier":
                    BSPSHavokUpdateMod data;
                    break;
                case "BSPSysRecycleBoundModifier":
                    BSPSRecycleBoundMod data;
                    break;
                case "BSPSysStripUpdateModifier":
                    BSPSStripUpdateMod data;
                    break;
                case "NiPSysColliderManager":
                    NiPSysCollMgr data;
                    break;
                case "NiPSysMeshEmitter":
                    NiPSysMeshEmitter data;
                    break;
                case "NiPSysSphereEmitter":
                    NiPSysSphEmitter data;
                    break;
                case "NiPSysBoxEmitter":
                    NiPSysBoxEmitter data;
                    break;
                case "NiPSysCylinderEmitter":
                    NiPSysCylEmitter data;
                    break;
                case "NiPSysPlanarCollider":
                    NiPSysPlanarColl data;
                    break;
                case "NiPSysSphericalCollider":
                    NiPSysSphColl data;
                    break;
                case "bhkHingeConstraint":
                    bhkHingeConstraint data;
                    break;
                case "bhkLimitedHingeConstraint":
                    bhkLHConstraint data;
                    break;
                case "NiMeshParticleSystem":
                    NiMeshParticleSys data;
                    break;
                case "NiMeshPSysData":
                    NiMeshPSysData data;
                    break;
                default:
                    Block data(i) <open=suppress>;
                    break;
            }
        }
        
    } blocks <open=true>;

    struct FOOTER {
        uint numRoots;
        if ( numRoots > 0 )
            Ref root[numRoots] <optimize=false>;
    } footer;

    Assert( FEof(), "Did not reach end of file." );

} file <open=true>;